//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputActions/ControlPlayer.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlPlayer : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlPlayer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlPlayer"",
    ""maps"": [
        {
            ""name"": ""Defecto"",
            ""id"": ""31d22271-563d-4d45-a036-bd78e324752b"",
            ""actions"": [
                {
                    ""name"": ""MovimientoX"",
                    ""type"": ""Value"",
                    ""id"": ""41b00102-842a-4ba9-9e3c-a64166bb8afe"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovimientoY"",
                    ""type"": ""Value"",
                    ""id"": ""ad91109b-6c7f-4349-96c9-2d7094e106d7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Saltar"",
                    ""type"": ""Button"",
                    ""id"": ""cd75953c-cfea-4ea3-a2ea-fb3ce46ce542"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rodar"",
                    ""type"": ""Button"",
                    ""id"": ""f68efe4a-3171-42e5-b5c3-e678d620f381"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Atacar"",
                    ""type"": ""Button"",
                    ""id"": ""fbd1bc67-3f7e-4ba9-9214-c3a50fd86941"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""4e081d7b-d260-416c-9df8-d14496d7f814"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Teclado"",
                    ""id"": ""2a713f19-5930-49c6-a81c-ea4c3c50af2c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""620077d0-cc25-465c-ba51-afb3e7b6544c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovimientoY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""28fd3224-f2e6-4c5e-b4f9-a9528dcdd7a6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovimientoY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mando"",
                    ""id"": ""ceb017d9-f990-4b9b-a4e9-dccce00d34b5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoY"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""af13b37e-ba56-4dd2-9892-c5d24c21852a"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""MovimientoY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""54f5172a-7fa0-4694-b50e-d0be00300646"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""MovimientoY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""32d30cad-9104-4bb6-873f-18555d8245bd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Saltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b65827f9-013f-4915-805f-ae73243195f0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Saltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e084669d-fe2f-4fe4-a709-86417acb5509"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Rodar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ee34271-4d3b-48cd-844c-fce0f025024d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Rodar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25933952-d564-40aa-b286-5ddfcb11a20a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Atacar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf058dc2-4141-4a3b-ac03-f3e636ea669f"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Atacar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eaaf7e68-8cfe-4780-ac7a-9e02b0c323a9"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Atacar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Teclado"",
                    ""id"": ""450c8abc-d899-48a7-9744-c0aac6f506a8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoX"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b52ccbf6-e672-4134-91ac-245efdf4060c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovimientoX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e070fdf5-9f86-41e0-a045-715762cd4a28"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovimientoX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mando"",
                    ""id"": ""0fe97f1d-5f16-4607-b945-42dd92c82f86"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoX"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b4878e59-deb0-4b71-8fda-49aaaca1918e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""MovimientoX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1cce1c7b-a3e4-4104-b5d1-befde2626442"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""MovimientoX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""da810bc3-ef4d-4106-a65e-dc266e9307a7"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88394b2b-5f66-4050-b220-81d0bdd931a7"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""ac1d4844-61ee-4865-b92b-8aaa1445069d"",
            ""actions"": [
                {
                    ""name"": ""Pausa"",
                    ""type"": ""Button"",
                    ""id"": ""be2ffc05-e114-4511-8377-dac22153f0e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2e31fb47-d8fc-4c65-a91f-9a39e524943a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6eccf6cc-7c29-49a2-ae97-92be87d3e3eb"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Defecto
        m_Defecto = asset.FindActionMap("Defecto", throwIfNotFound: true);
        m_Defecto_MovimientoX = m_Defecto.FindAction("MovimientoX", throwIfNotFound: true);
        m_Defecto_MovimientoY = m_Defecto.FindAction("MovimientoY", throwIfNotFound: true);
        m_Defecto_Saltar = m_Defecto.FindAction("Saltar", throwIfNotFound: true);
        m_Defecto_Rodar = m_Defecto.FindAction("Rodar", throwIfNotFound: true);
        m_Defecto_Atacar = m_Defecto.FindAction("Atacar", throwIfNotFound: true);
        m_Defecto_Reset = m_Defecto.FindAction("Reset", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Pausa = m_Menu.FindAction("Pausa", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Defecto
    private readonly InputActionMap m_Defecto;
    private IDefectoActions m_DefectoActionsCallbackInterface;
    private readonly InputAction m_Defecto_MovimientoX;
    private readonly InputAction m_Defecto_MovimientoY;
    private readonly InputAction m_Defecto_Saltar;
    private readonly InputAction m_Defecto_Rodar;
    private readonly InputAction m_Defecto_Atacar;
    private readonly InputAction m_Defecto_Reset;
    public struct DefectoActions
    {
        private @ControlPlayer m_Wrapper;
        public DefectoActions(@ControlPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovimientoX => m_Wrapper.m_Defecto_MovimientoX;
        public InputAction @MovimientoY => m_Wrapper.m_Defecto_MovimientoY;
        public InputAction @Saltar => m_Wrapper.m_Defecto_Saltar;
        public InputAction @Rodar => m_Wrapper.m_Defecto_Rodar;
        public InputAction @Atacar => m_Wrapper.m_Defecto_Atacar;
        public InputAction @Reset => m_Wrapper.m_Defecto_Reset;
        public InputActionMap Get() { return m_Wrapper.m_Defecto; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefectoActions set) { return set.Get(); }
        public void SetCallbacks(IDefectoActions instance)
        {
            if (m_Wrapper.m_DefectoActionsCallbackInterface != null)
            {
                @MovimientoX.started -= m_Wrapper.m_DefectoActionsCallbackInterface.OnMovimientoX;
                @MovimientoX.performed -= m_Wrapper.m_DefectoActionsCallbackInterface.OnMovimientoX;
                @MovimientoX.canceled -= m_Wrapper.m_DefectoActionsCallbackInterface.OnMovimientoX;
                @MovimientoY.started -= m_Wrapper.m_DefectoActionsCallbackInterface.OnMovimientoY;
                @MovimientoY.performed -= m_Wrapper.m_DefectoActionsCallbackInterface.OnMovimientoY;
                @MovimientoY.canceled -= m_Wrapper.m_DefectoActionsCallbackInterface.OnMovimientoY;
                @Saltar.started -= m_Wrapper.m_DefectoActionsCallbackInterface.OnSaltar;
                @Saltar.performed -= m_Wrapper.m_DefectoActionsCallbackInterface.OnSaltar;
                @Saltar.canceled -= m_Wrapper.m_DefectoActionsCallbackInterface.OnSaltar;
                @Rodar.started -= m_Wrapper.m_DefectoActionsCallbackInterface.OnRodar;
                @Rodar.performed -= m_Wrapper.m_DefectoActionsCallbackInterface.OnRodar;
                @Rodar.canceled -= m_Wrapper.m_DefectoActionsCallbackInterface.OnRodar;
                @Atacar.started -= m_Wrapper.m_DefectoActionsCallbackInterface.OnAtacar;
                @Atacar.performed -= m_Wrapper.m_DefectoActionsCallbackInterface.OnAtacar;
                @Atacar.canceled -= m_Wrapper.m_DefectoActionsCallbackInterface.OnAtacar;
                @Reset.started -= m_Wrapper.m_DefectoActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_DefectoActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_DefectoActionsCallbackInterface.OnReset;
            }
            m_Wrapper.m_DefectoActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MovimientoX.started += instance.OnMovimientoX;
                @MovimientoX.performed += instance.OnMovimientoX;
                @MovimientoX.canceled += instance.OnMovimientoX;
                @MovimientoY.started += instance.OnMovimientoY;
                @MovimientoY.performed += instance.OnMovimientoY;
                @MovimientoY.canceled += instance.OnMovimientoY;
                @Saltar.started += instance.OnSaltar;
                @Saltar.performed += instance.OnSaltar;
                @Saltar.canceled += instance.OnSaltar;
                @Rodar.started += instance.OnRodar;
                @Rodar.performed += instance.OnRodar;
                @Rodar.canceled += instance.OnRodar;
                @Atacar.started += instance.OnAtacar;
                @Atacar.performed += instance.OnAtacar;
                @Atacar.canceled += instance.OnAtacar;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
            }
        }
    }
    public DefectoActions @Defecto => new DefectoActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_Pausa;
    public struct MenuActions
    {
        private @ControlPlayer m_Wrapper;
        public MenuActions(@ControlPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pausa => m_Wrapper.m_Menu_Pausa;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @Pausa.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnPausa;
                @Pausa.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnPausa;
                @Pausa.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnPausa;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Pausa.started += instance.OnPausa;
                @Pausa.performed += instance.OnPausa;
                @Pausa.canceled += instance.OnPausa;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamePadSchemeIndex = -1;
    public InputControlScheme GamePadScheme
    {
        get
        {
            if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
            return asset.controlSchemes[m_GamePadSchemeIndex];
        }
    }
    public interface IDefectoActions
    {
        void OnMovimientoX(InputAction.CallbackContext context);
        void OnMovimientoY(InputAction.CallbackContext context);
        void OnSaltar(InputAction.CallbackContext context);
        void OnRodar(InputAction.CallbackContext context);
        void OnAtacar(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnPausa(InputAction.CallbackContext context);
    }
}
